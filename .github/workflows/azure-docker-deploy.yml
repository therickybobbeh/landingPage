name: Build & Deploy to Azure

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  # GitHub Container Registry details (matching App Service configuration)
  REGISTRY: ghcr.io
  REPOSITORY: therickybobbeh
  FRONTEND_IMAGE: portfolio-frontend
  BACKEND_IMAGE: portfolio-backend
  
  # Azure Web App names
  FRONTEND_APP_NAME: development-profile
  BACKEND_APP_NAME: portfolio-api

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # Checkout repository
      - name: Checkout
        uses: actions/checkout@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Login to GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push frontend image to GitHub Container Registry
      - name: Build & Push frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ env.FRONTEND_IMAGE }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ env.FRONTEND_IMAGE }}:latest
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ env.FRONTEND_IMAGE }}:latest
          cache-to: type=inline

      # Build and push backend image to GitHub Container Registry
      - name: Build & Push backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ env.BACKEND_IMAGE }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ env.BACKEND_IMAGE }}:latest
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ env.BACKEND_IMAGE }}:latest
          cache-to: type=inline

      # Login to Azure for deployment
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Deploy frontend to Azure Web App
      - name: Deploy frontend to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.FRONTEND_APP_NAME }}
          images: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ env.FRONTEND_IMAGE }}:${{ github.sha }}

      # Check if backend app exists before trying to deploy
      - name: Check backend app exists
        id: check-backend
        continue-on-error: true
        run: |
          az webapp show --name ${{ env.BACKEND_APP_NAME }} --query name -o tsv
          if [ $? -eq 0 ]; then
            echo "backend_exists=true" >> $GITHUB_OUTPUT
          else
            echo "backend_exists=false" >> $GITHUB_OUTPUT
          fi

      # Deploy backend to Azure Web App (if it exists)
      - name: Deploy backend to Azure Web App
        if: steps.check-backend.outputs.backend_exists == 'true'
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.BACKEND_APP_NAME }}
          images: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ env.BACKEND_IMAGE }}:${{ github.sha }}

      # Display deployment information
      - name: Deployment Information
        run: |
          echo "✅ Frontend deployed to: https://${{ env.FRONTEND_APP_NAME }}.azurewebsites.net"
          if [[ "${{ steps.check-backend.outputs.backend_exists }}" == "true" ]]; then
            echo "✅ Backend deployed to: https://${{ env.BACKEND_APP_NAME }}.azurewebsites.net"
          else
            echo "❓ Backend app '${{ env.BACKEND_APP_NAME }}' not found. Backend deployment skipped."
          fi