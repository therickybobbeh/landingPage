name: Deploy Azure Function

on:
  push:
    branches:
      - main
    paths:
      - 'api/**' # Only run this workflow when API code changes
      - 'frontend/app/utils/chatPrompt.js' # Also run when the shared prompt file changes
  workflow_dispatch: # Allow manual triggering

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22.x' # Using current LTS version supported by Azure Functions

    - name: Set up Function App configuration
      run: |
        cd api
        # Ensure node version is explicitly set to the LTS version
        if ! grep -q '"engines"' package.json; then
          node -e 'const pkg = require("./package.json"); pkg.engines = pkg.engines || {"node": "~22"}; require("fs").writeFileSync("package.json", JSON.stringify(pkg, null, 2));'
        fi
        # Ensure proper openai version is specified
        if ! grep -q '"openai"' package.json; then
          node -e 'const pkg = require("./package.json"); pkg.dependencies = pkg.dependencies || {}; pkg.dependencies.openai = pkg.dependencies.openai || "^4.0.0"; require("fs").writeFileSync("package.json", JSON.stringify(pkg, null, 2));'
        fi
        # Create a lightweight function project
        npm install --no-package-lock

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: List Azure Function Apps
      run: |
        echo "Listing available Azure Function Apps:"
        az functionapp list --output table

    # - name: Check Function App runtime settings
    #   run: |
    #     echo "Checking Function App runtime settings:"
    #     az functionapp config show --name portfolio-api-func --resource-group portfolio --query "nodeVersion" --output tsv

    # - name: Clear deployment locks
    #   run: |
    #     echo "Clearing any deployment locks..."
    #     az resource invoke-action --action cleanupSnapshots --resource-group portfolio --resource-type Microsoft.Web/sites --name portfolio-api-func
    #     sleep 30

    # - name: Update Function App settings
    #   run: |
    #     echo "Updating Function App to use Node.js 22:"
    #     az functionapp config set --name portfolio-api-func --resource-group portfolio --node-version 22 --linux-fx-version "NODE|22"

    - name: Deploy to Azure Function App
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: 'portfolio-api-func'
        slot-name: 'production'
        package: 'api'
        respect-funcignore: true
        scm-do-build-during-deployment: true

    - name: Azure Function App deployment status
      if: always()
      run: |
        if [[ "${{ steps.fa.outcome }}" == "failure" ]]; then
          echo "Deployment failed. Checking logs..."
          az functionapp deployment list --name portfolio-api-func --resource-group portfolio --output table
          az functionapp log tail --name portfolio-api-func --resource-group portfolio
        fi