version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:17
    container_name: postgres_db
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=myapp_db
    ports:
      - "5432:5432"
    volumes:
      # Use a named volume without existing data
      - postgres_data:/var/lib/postgresql/data
      # Uncomment to add initialization scripts
      # - ./backend/db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # FastAPI Backend
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: portfolio_backend
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:admin@db:5432/myapp_db
      - SECRET_KEY=supersecretkey
      - FRONTEND_URL=http://localhost:3000
    volumes:
      - ./backend:/app
    command: uvicorn app.main:app --host 0.0.0.0 --reload

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=http://localhost:8000
    container_name: portfolio_frontend
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_TELEMETRY_DISABLED=1
    volumes:
      - ./frontend/public:/app/public

volumes:
  postgres_data: